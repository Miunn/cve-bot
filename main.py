from dotenv import load_dotenv
from os import getenv
import discord
from discord import app_commands

from cveFetch import CVEFetch
from model.cve import CVE
from utils import DiscordUtils

if not load_dotenv():
    print("Can't load dotenv")
    exit(0)

GUILD_ID = getenv("guild")
guild = discord.Object(id=GUILD_ID)

intents = discord.Intents.default()
intents.message_content = True

client = discord.Client(intents=intents)
tree = app_commands.CommandTree(client)

@tree.command(
    name="hello",
    guild=guild
)
async def hello(interaction: discord.Interaction):
    await interaction.response.send_message("```Hello```")

@tree.command(
    name="last-cves",
    guild=guild
)
async def lastCves(interaction: discord.Interaction):
    data = CVEFetch.get_last_cves()
    
    embed = DiscordUtils.get_default_embed("20 Last CVEs", interaction)
    
    embed.description = ""
    for cve in data[:20]:
        embed.description += "`" +cve.id_ + "`" + "\t-\t" + cve.published.strftime("%d %b %H:%M:%S") + "\n"
    
    await interaction.response.send_message(embed=embed)
    
@tree.command(
    name="cve",
    guild=guild
)
async def cve(interaction: discord.Interaction, id_: str):
    cve = CVEFetch.get_cve(id_)
    
    embed = DiscordUtils.get_default_embed(cve.id_, interaction)
    
    vuln_conf_payload = '\n'.join(['```'+vuln_conf['title']+'```' for vuln_conf in cve.vulnerable_configuration])
    embed.description = f"""
**Description**
{cve.summary}

- CVSS : {cve.cvss}
- CWE : {cve.cwe}

**Vulnerable configuration**
{vuln_conf_payload}
"""
        
    await interaction.response.send_message(embed=embed)

@client.event
async def on_ready():
    await tree.sync(guild=guild)
    print(f"Connected {client.user}")

client.run(getenv("token"))